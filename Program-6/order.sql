CREATE DATABASE ORDER_;
USE ORDER_;

CREATE TABLE SALESMAN 
(SALESMAN_ID INT(4), 
NAME VARCHAR(20), 
CITY VARCHAR(20), 
COMMISSION VARCHAR(20), 
PRIMARY KEY (SALESMAN_ID));

CREATE TABLE CUSTOMER
(CUSTOMER_ID INT, 
CUST_NAME VARCHAR(20),
CITY VARCHAR(20), 
GRADE INT,  
SALESMAN_ID INT, 
PRIMARY KEY (CUSTOMER_ID), 
foreign key(SALESMAN_ID) REFERENCES SALESMAN(SALESMAN_ID) ON DELETE SET NULL);
desc customer;


CREATE TABLE ORDERS 
(ORD_NO INT(5), 
PURCHASE_AMT FLOAT, 
ORD_DATE DATE, 
CUSTOMER_ID INT,
SALESMAN_ID INT,
PRIMARY KEY (ORD_NO), 
foreign key(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE, 
foreign key(SALESMAN_ID) REFERENCES SALESMAN(SALESMAN_ID) ON DELETE CASCADE);
desc orders;

INSERT INTO SALESMAN VALUES (1000, 'JOHN','BANGALORE','25 %'); 
INSERT INTO SALESMAN VALUES (2000, 'RAVI','BANGALORE','20 %'); 
INSERT INTO SALESMAN VALUES (3000, 'KUMAR','MYSORE','15 %'); 
INSERT INTO SALESMAN VALUES (4000, 'SMITH','DELHI','30 %'); 
INSERT INTO SALESMAN VALUES (5000, 'HARSHA','HYDERBAD','15 %'); 

INSERT INTO CUSTOMER VALUES (10, 'PREETHI','BANGALORE', 100, 1000); 
INSERT INTO CUSTOMER VALUES (11, 'VIVEK','MANGALORE', 300, 1000); 
INSERT INTO CUSTOMER VALUES (12, 'BHASKAR','CHENNAI', 400, 2000); 
INSERT INTO CUSTOMER VALUES (13, 'CHETHAN','BANGALORE', 200, 2000); 
INSERT INTO CUSTOMER VALUES (14, 'MAMATHA','BANGALORE', 400, 3000); 


INSERT INTO ORDERS VALUES (50, 5000, '04-05-17', 10, 1000); 
INSERT INTO ORDERS VALUES (51, 450, '20-01-17', 10, 2000);
INSERT INTO ORDERS VALUES (52, 1000, '24-02-17', 13, 2000); 
INSERT INTO ORDERS VALUES (53, 3500, '13-04-17', 14, 3000); 
INSERT INTO ORDERS VALUES (54, 550, '09-03-17', 12, 2000);

SELECT * FROM SALESMAN;
SELECT * FROM CUSTOMER;
SELECT * FROM ORDERS;

-- Count the customers with grades above Bangalore’s average. 

SELECT GRADE, COUNT(DISTINCT CUSTOMER_ID) 
FROM CUSTOMER 
GROUP BY GRADE 
HAVING GRADE > (SELECT AVG(GRADE) 
FROM CUSTOMER 
WHERE CITY='BANGALORE');

 


-- Find the name and numbers of all salesmen who had more than one customer. 
SELECT SALESMAN_ID, NAME 
FROM SALESMAN A 
WHERE 1 < (SELECT COUNT(*) 
FROM CUSTOMER 
WHERE SALESMAN_ID=A.SALESMAN_ID);

 
-- List all salesmen and indicate those who have and don’t have customers in their cities (Use UNION operation.) 
SELECT SALESMAN.SALESMAN_ID, NAME, CUST_NAME, COMMISSION 
FROM SALESMAN, CUSTOMER 
WHERE SALESMAN.CITY = CUSTOMER.CITY 
UNION 
SELECT SALESMAN_ID, NAME, 'NO MATCH', COMMISSION 
FROM SALESMAN 
WHERE NOT CITY = ANY 
(SELECT CITY 
FROM CUSTOMER) 
ORDER BY 2 DESC;

-- Create a view that finds the salesman who has the customer with the highest order of a day. 
CREATE VIEW ELITSALESMAN AS 
SELECT B.ORD_DATE, A.SALESMAN_ID, A.NAME 
FROM SALESMAN A, ORDERS B
WHERE A.SALESMAN_ID = B.SALESMAN_ID 
AND B.PURCHASE_AMT=(SELECT MAX(PURCHASE_AMT) 
FROM ORDERS C 
WHERE C.ORD_DATE = B.ORD_DATE);
select * from elitsalesman;
 

-- Demonstrate the DELETE operation by removing salesman with id 1000. All his orders must also be deleted. 
DELETE FROM SALESMAN 
WHERE SALESMAN_ID=1000;